# Nginx Production Configuration for dreamerai.io
# Security-hardened configuration with best practices

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=3r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Gzip settings
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/x-font-ttf font/opentype image/svg+xml;
gzip_disable "msie6";

# SSL Session Cache
ssl_session_cache shared:SSL:50m;
ssl_session_timeout 1d;
ssl_session_tickets off;

# Main website - dreamerai.io
server {
    listen 80;
    listen [::]:80;
    server_name dreamerai.io www.dreamerai.io;
    
    # Redirect all HTTP to HTTPS
    return 301 https://dreamerai.io$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.dreamerai.io;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/dreamerai.io.crt;
    ssl_certificate_key /etc/ssl/private/dreamerai.io.key;
    
    # Redirect www to non-www
    return 301 https://dreamerai.io$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dreamerai.io;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/dreamerai.io.crt;
    ssl_certificate_key /etc/ssl/private/dreamerai.io.key;
    ssl_trusted_certificate /etc/ssl/certs/dreamerai.io.ca-bundle;
    
    # Modern SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
    
    # CSP Header with nonce support
    set $csp_nonce $request_id;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-$csp_nonce' https://apis.google.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.dreamerai.io wss://api.dreamerai.io https://*.google-analytics.com; media-src 'self' blob:; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests; block-all-mixed-content; report-uri https://api.dreamerai.io/api/v1/security/csp-report;" always;
    
    # Remove server version
    server_tokens off;
    
    # Prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn addr 100;
    
    # Client body size limit
    client_max_body_size 10M;
    client_body_buffer_size 1M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Root directory
    root /var/www/dreamerai.io/frontend/build;
    index index.html;
    
    # Serve static files with cache headers
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # Don't cache HTML
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header X-Content-Type-Options "nosniff" always;
        }
    }
    
    # Security.txt
    location /.well-known/security.txt {
        alias /var/www/dreamerai.io/security.txt;
    }
    
    # Block access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }
    
    # Block access to backup files
    location ~ ~$ {
        deny all;
        return 404;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Logging
    access_log /var/log/nginx/dreamerai.io.access.log combined buffer=32k flush=5m;
    error_log /var/log/nginx/dreamerai.io.error.log warn;
}

# API Server - api.dreamerai.io
server {
    listen 80;
    listen [::]:80;
    server_name api.dreamerai.io;
    
    # Redirect all HTTP to HTTPS
    return 301 https://api.dreamerai.io$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.dreamerai.io;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/api.dreamerai.io.crt;
    ssl_certificate_key /etc/ssl/private/api.dreamerai.io.key;
    ssl_trusted_certificate /etc/ssl/certs/api.dreamerai.io.ca-bundle;
    
    # Modern SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "0" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
    
    # Remove server version
    server_tokens off;
    
    # Rate limiting for API
    limit_req zone=api burst=50 nodelay;
    
    # Specific rate limiting for auth endpoints
    location ~ ^/api/v1/auth/(login|register|reset-password) {
        limit_req zone=auth burst=5 nodelay;
        proxy_pass http://127.0.0.1:5000;
        include /etc/nginx/proxy_params;
    }
    
    # Client body size limit for API
    client_max_body_size 10M;
    
    # Timeouts for API
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
    proxy_read_timeout 60;
    
    # API proxy configuration
    location / {
        # CORS preflight handling
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key,X-Session-ID,X-Device-ID,X-CSRF-Token' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,X-Request-ID,X-Response-Time,X-RateLimit-Limit,X-RateLimit-Remaining' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        # Proxy to Node.js backend
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_cache_bypass $http_upgrade;
        
        # Security headers for API responses
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        
        # Add security headers to all responses
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "0" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
    
    # WebSocket support for real-time features
    location /ws {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 3600;
        proxy_send_timeout 3600;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://127.0.0.1:5000/health;
        access_log off;
    }
    
    # Monitoring endpoint (internal only)
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
    }
    
    # Block access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }
    
    # Custom error pages
    error_page 404 @404;
    error_page 500 502 503 504 @50x;
    
    location @404 {
        internal;
        default_type application/json;
        return 404 '{"error": "Not Found", "status": 404, "message": "The requested resource was not found"}';
    }
    
    location @50x {
        internal;
        default_type application/json;
        return 500 '{"error": "Internal Server Error", "status": 500, "message": "An error occurred processing your request"}';
    }
    
    # Logging
    access_log /var/log/nginx/api.dreamerai.io.access.log combined buffer=32k flush=5m;
    error_log /var/log/nginx/api.dreamerai.io.error.log warn;
}

# Redirect IP access to domain
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    
    ssl_certificate /etc/ssl/certs/dreamerai.io.crt;
    ssl_certificate_key /etc/ssl/private/dreamerai.io.key;
    
    server_name _;
    return 301 https://dreamerai.io$request_uri;
}