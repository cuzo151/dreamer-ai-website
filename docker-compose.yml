version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    command: npm start
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
    networks:
      - dreamer-network

  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    command: npm run dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://dreamer:dreamerpass@postgres:5432/dreamerai_dev
      - REDIS_URL=redis://:redispass@redis:6379
      - JWT_SECRET=development-secret-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - dreamer-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=dreamer
      - POSTGRES_PASSWORD=dreamerpass
      - POSTGRES_DB=dreamerai_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    ports:
      - "5432:5432"
    networks:
      - dreamer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dreamer"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redispass
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - dreamer-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@dreamer-ai.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - dreamer-network
    profiles:
      - tools

  # Redis Commander (optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redispass
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - dreamer-network
    profiles:
      - tools

  # Nginx (for production-like testing)
  nginx:
    image: nginx:alpine
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:8080"
    depends_on:
      - frontend
      - backend
    networks:
      - dreamer-network
    profiles:
      - production

networks:
  dreamer-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: